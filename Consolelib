local ConsoleLib = {}

-- CONFIGURATION
ConsoleLib.config = {
    Width = 480,
    Height = 320,
    MaxLines = 200,
    BackgroundColor = Color3.fromRGB(30, 30, 30),
    TopbarColor = Color3.fromRGB(25, 25, 25),
    AccentColor = Color3.fromRGB(147, 112, 219),
    TextColor = Color3.fromRGB(240, 240, 240),
    TabWidth = 120,
    Draggable = true,
    Font = Enum.Font.Gotham
}

ConsoleLib._lines = {}
ConsoleLib.Visible = false
local CurrentType = "INFO"

local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
local UserInputService = game:GetService("UserInputService")

-- DRAG FUNCTION
local function makeDraggable(frame)
    local dragging, dragInput, dragStart, startPos
    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging=false end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input==dragInput and dragging then update(input) end
    end)
end

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ConsoleLibGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, ConsoleLib.config.Width, 0, ConsoleLib.config.Height)
MainFrame.Position = UDim2.new(0.5, -ConsoleLib.config.Width/2, 0.5, -ConsoleLib.config.Height/2)
MainFrame.BackgroundColor3 = ConsoleLib.config.BackgroundColor
MainFrame.BorderSizePixel = 0
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Visible = false
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui
if ConsoleLib.config.Draggable then makeDraggable(MainFrame) end

local UICornerMain = Instance.new("UICorner")
UICornerMain.CornerRadius = UDim.new(0, 10)
UICornerMain.Parent = MainFrame

-- LEFT TAB PANEL
local TabPanel = Instance.new("Frame")
TabPanel.Size = UDim2.new(0, ConsoleLib.config.TabWidth, 1, 0)
TabPanel.Position = UDim2.new(0, 0, 0, 0)
TabPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TabPanel.Parent = MainFrame

local UIListTabs = Instance.new("UIListLayout")
UIListTabs.SortOrder = Enum.SortOrder.LayoutOrder
UIListTabs.FillDirection = Enum.FillDirection.Vertical
UIListTabs.Padding = UDim.new(0,2)
UIListTabs.Parent = TabPanel

-- MAIN CONTENT PANEL
local ContentPanel = Instance.new("Frame")
ContentPanel.Size = UDim2.new(1, -ConsoleLib.config.TabWidth - 10, 1, -10)
ContentPanel.Position = UDim2.new(0, ConsoleLib.config.TabWidth + 5, 0, 5)
ContentPanel.BackgroundColor3 = Color3.fromRGB(30,30,30)
ContentPanel.Parent = MainFrame
local UICornerContent = Instance.new("UICorner")
UICornerContent.CornerRadius = UDim.new(0,8)
UICornerContent.Parent = ContentPanel

-- FUNCTION TO CREATE A TAB
local function createTab(name)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, -10, 0, 36)
    tabButton.BackgroundColor3 = Color3.fromRGB(60,60,60)
    tabButton.Text = name
    tabButton.Font = Enum.Font.GothamBold
    tabButton.TextSize = 16
    tabButton.TextColor3 = Color3.fromRGB(255,255,255)
    tabButton.Parent = TabPanel
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0,6)
    corner.Parent = tabButton

    tabButton.MouseEnter:Connect(function() tabButton.BackgroundColor3=ConsoleLib.config.AccentColor end)
    tabButton.MouseLeave:Connect(function() tabButton.BackgroundColor3=Color3.fromRGB(60,60,60) end)

    tabButton.MouseButton1Click:Connect(function()
        for _,v in pairs(ContentPanel:GetChildren()) do v.Visible=false end
        local frame = ContentPanel:FindFirstChild(name)
        if frame then frame.Visible=true end
    end)

    -- create a frame for this tab inside content
    local tabContent = Instance.new("Frame")
    tabContent.Name = name
    tabContent.Size = UDim2.new(1,0,1,0)
    tabContent.BackgroundTransparency = 1
    tabContent.Visible = false
    tabContent.Parent = ContentPanel
end

-- DEFAULT TABS
createTab("Console")
createTab("Placeholder")
createTab("Settings")

-- TOGGLE BUTTON
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 120, 0, 36)
ToggleButton.Position = UDim2.new(0.95, -60, 0.95, -20)
ToggleButton.AnchorPoint = Vector2.new(0.5,0.5)
ToggleButton.BackgroundColor3 = ConsoleLib.config.AccentColor
ToggleButton.TextColor3 = Color3.new(1,1,1)
ToggleButton.Text="Console"
ToggleButton.Font=Enum.Font.GothamBold
ToggleButton.TextSize=18
ToggleButton.Parent=ScreenGui
if ConsoleLib.config.Draggable then makeDraggable(ToggleButton) end
ToggleButton.MouseButton1Click:Connect(function()
    ConsoleLib.Visible = not ConsoleLib.Visible
    MainFrame.Visible = ConsoleLib.Visible
end)

-- FUNCTION TO ADD LOG LINES (inside Console tab)
local LogColors = {
    INFO=Color3.fromRGB(255,255,255),
    ERROR=Color3.fromRGB(255,120,0),
    WARN=Color3.fromRGB(255,50,50),
    OUTPUT=Color3.fromRGB(0,170,255)
}
local LogBold = {INFO=false,ERROR=true,WARN=true,OUTPUT=true}

local ConsoleContent = ContentPanel:FindFirstChild("Console")
local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(1, -10, 1, -10)
ScrollingFrame.Position = UDim2.new(0,5,0,5)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.CanvasSize = UDim2.new(0,0,0,0)
ScrollingFrame.ScrollBarThickness = 6
ScrollingFrame.Parent = ConsoleContent

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0,2)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = ScrollingFrame

function ConsoleLib.addLine(text,type_)
    type_ = type_ or "INFO"
    local line = Instance.new("TextLabel")
    line.Size = UDim2.new(1,-4,0,22)
    line.BackgroundTransparency = 1
    line.TextXAlignment = Enum.TextXAlignment.Left
    line.Font = LogBold[type_] and Enum.Font.GothamBold or Enum.Font.Gotham
    line.TextColor3 = LogColors[type_] or Color3.fromRGB(255,255,255)
    line.TextSize = 16
    line.Text = string.format("[%s] %s",type_,text)
    line.Parent = ScrollingFrame
    table.insert(ConsoleLib._lines,line)
    if #ConsoleLib._lines>ConsoleLib.config.MaxLines then
        ConsoleLib._lines[1]:Destroy()
        table.remove(ConsoleLib._lines,1)
    end
    ScrollingFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y)
    ScrollingFrame.CanvasPosition = Vector2.new(0,UIListLayout.AbsoluteContentSize.Y)
end

return ConsoleLib
