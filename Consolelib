-- ConsoleLib.lua (PowerShell inspired, with Minimize + Mobile friendly)
local ConsoleLib = {}
ConsoleLib.__index = ConsoleLib

ConsoleLib.config = {
    Width = 300,
    Height = 250,
    MinHeight = 30, -- collapsed state
    BackgroundColor = Color3.fromRGB(12, 12, 12),
    TextColor = Color3.fromRGB(200, 200, 200),
    AccentColor = Color3.fromRGB(0, 120, 215),
    Font = Enum.Font.Code,
    MaxLines = 300,
}

function ConsoleLib:Create()
    local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.ResetOnSpawn = false
    ScreenGui.IgnoreGuiInset = true
    ScreenGui.Parent = PlayerGui

    local Frame = Instance.new("Frame")
    Frame.Size = UDim2.new(0, self.config.Width, 0, self.config.Height)
    Frame.Position = UDim2.new(0.5, -self.config.Width/2, 0.5, -self.config.Height/2)
    Frame.BackgroundColor3 = self.config.BackgroundColor
    Frame.BorderSizePixel = 0
    Frame.Active = true
    Frame.Draggable = true -- mobile draggable
    Frame.Parent = ScreenGui

    -- Topbar
    local Topbar = Instance.new("Frame")
    Topbar.Size = UDim2.new(1, 0, 0, 25)
    Topbar.BackgroundColor3 = Color3.fromRGB(20,20,20)
    Topbar.BorderSizePixel = 0
    Topbar.Parent = Frame

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, -60, 1, 0)
    Title.Position = UDim2.new(0, 5, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Font = self.config.Font
    Title.TextSize = 14
    Title.TextColor3 = self.config.TextColor
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Text = "Windows PowerShell (ConsoleLib)"
    Title.Parent = Topbar

    -- Minimize button
    local MinBtn = Instance.new("TextButton")
    MinBtn.Size = UDim2.new(0, 25, 0, 25)
    MinBtn.Position = UDim2.new(1, -55, 0, 0)
    MinBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    MinBtn.Text = "-"
    MinBtn.Font = Enum.Font.Code
    MinBtn.TextSize = 16
    MinBtn.TextColor3 = Color3.fromRGB(255,255,255)
    MinBtn.Parent = Topbar

    -- Close button
    local CloseBtn = Instance.new("TextButton")
    CloseBtn.Size = UDim2.new(0, 25, 0, 25)
    CloseBtn.Position = UDim2.new(1, -30, 0, 0)
    CloseBtn.BackgroundColor3 = Color3.fromRGB(200,50,50)
    CloseBtn.Text = "X"
    CloseBtn.Font = Enum.Font.Code
    CloseBtn.TextSize = 14
    CloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
    CloseBtn.Parent = Topbar

    -- Scroller
    local Scroller = Instance.new("ScrollingFrame")
    Scroller.Size = UDim2.new(1, -10, 1, -55)
    Scroller.Position = UDim2.new(0, 5, 0, 30)
    Scroller.CanvasSize = UDim2.new(0, 0, 0, 0)
    Scroller.BackgroundTransparency = 1
    Scroller.ScrollBarThickness = 8
    Scroller.Parent = Frame

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Parent = Scroller
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Input
    local Input = Instance.new("TextBox")
    Input.Size = UDim2.new(1, -10, 0, 20)
    Input.Position = UDim2.new(0, 5, 1, -25)
    Input.BackgroundColor3 = Color3.fromRGB(20,20,20)
    Input.BorderColor3 = self.config.AccentColor
    Input.TextColor3 = self.config.TextColor
    Input.TextXAlignment = Enum.TextXAlignment.Left
    Input.ClearTextOnFocus = false
    Input.Font = self.config.Font
    Input.TextSize = 14
    Input.Text = "C:/"
    Input.Parent = Frame

    local console = setmetatable({
        Frame = Frame,
        Scroller = Scroller,
        Input = Input,
        Commands = {},
        Minimized = false,
    }, ConsoleLib)

    -- Input handler
    Input.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local text = Input.Text
            console:Output("C:/ " .. text)

            local args = string.split(text, " ")
            local cmd = table.remove(args, 1):lower()

            if console.Commands[cmd] then
                console.Commands[cmd](args)
            else
                console:Output("Unknown command: " .. cmd)
            end
            Input.Text = "C:/"
        end
    end)

    -- Auto scroll
    UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        Scroller.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
        Scroller.CanvasPosition = Vector2.new(0, math.huge)
    end)

    -- Close button logic
    CloseBtn.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)

    -- Minimize toggle
    MinBtn.MouseButton1Click:Connect(function()
        console.Minimized = not console.Minimized
        if console.Minimized then
            Frame.Size = UDim2.new(0, self.config.Width, 0, self.config.MinHeight)
            Scroller.Visible = false
            Input.Visible = false
        else
            Frame.Size = UDim2.new(0, self.config.Width, 0, self.config.Height)
            Scroller.Visible = true
            Input.Visible = true
        end
    end)

    return console
end

function ConsoleLib:Output(text)
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(1, -10, 0, 18)
    Label.BackgroundTransparency = 1
    Label.Font = self.config.Font
    Label.TextSize = 14
    Label.TextColor3 = self.config.TextColor
    Label.TextXAlignment = Enum.TextXAlignment.Left
    Label.Text = text
    Label.Parent = self.Scroller
end

function ConsoleLib:Clear()
    for _, child in ipairs(self.Scroller:GetChildren()) do
        if child:IsA("TextLabel") then
            child:Destroy()
        end
    end
end

function ConsoleLib:RegisterCommand(name, callback)
    self.Commands[name:lower()] = callback
end

function ConsoleLib:AddDefaultCommands()
    self:RegisterCommand("help", function()
        self:Output("Available commands:")
        for cmdName in pairs(self.Commands) do
            self:Output(" - " .. cmdName)
        end
    end)

    self:RegisterCommand("clear", function()
        self:Clear()
    end)

    self:RegisterCommand("echo", function(args)
        self:Output(table.concat(args, " "))
    end)

    self:RegisterCommand("time", function()
        self:Output("Current Time: " .. os.date("%X"))
    end)
end

return ConsoleLib
